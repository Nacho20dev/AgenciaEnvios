// <auto-generated />
using System;
using System.Collections.Generic;
using AgenciaEnvios.LogicaAccesoDatos.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaEnvios.LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250502232334_nueva")]
    partial class nueva
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "AgenciaEnvios.LogicaNegocio.Entidades.Agencia.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Latitud")
                                .HasColumnType("float");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float");
                        });

                    b.HasKey("Id");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciaOrigenId")
                        .HasColumnType("int");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NroTracking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaOrigenId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Envios");

                    b.HasDiscriminator<string>("Tipo").HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Seguimiento", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnvioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("seguimientos");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Comun", b =>
                {
                    b.HasBaseType("AgenciaEnvios.LogicaNegocio.Entidades.Envio");

                    b.Property<int>("AgenciaDestinoId")
                        .HasColumnType("int");

                    b.HasIndex("AgenciaDestinoId");

                    b.HasDiscriminator().HasValue("Comun");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Urgente", b =>
                {
                    b.HasBaseType("AgenciaEnvios.LogicaNegocio.Entidades.Envio");

                    b.Property<bool>("Eficiente")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Urgente");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("AgenciaEnvios.LogicaNegocio.VO.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<string>("Ciudad")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Ciudad");

                            b1.Property<int>("CodigoPostal")
                                .HasColumnType("int")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Destinatario")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Destinatario");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.HasOne("AgenciaEnvios.LogicaNegocio.Entidades.Agencia", "AgenciaOrigen")
                        .WithMany()
                        .HasForeignKey("AgenciaOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AgenciaEnvios.LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("AgenciaOrigen");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Seguimiento", b =>
                {
                    b.HasOne("AgenciaEnvios.LogicaNegocio.Entidades.Envio", null)
                        .WithMany("Seguimientos")
                        .HasForeignKey("EnvioId");

                    b.HasOne("AgenciaEnvios.LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Comun", b =>
                {
                    b.HasOne("AgenciaEnvios.LogicaNegocio.Entidades.Agencia", "AgenciaDestino")
                        .WithMany()
                        .HasForeignKey("AgenciaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgenciaDestino");
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Urgente", b =>
                {
                    b.OwnsOne("AgenciaEnvios.LogicaNegocio.VO.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("UrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<string>("Ciudad")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Ciudad");

                            b1.Property<int>("CodigoPostal")
                                .HasColumnType("int")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Destinatario")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Destinatario");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.HasKey("UrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("UrgenteId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();
                });

            modelBuilder.Entity("AgenciaEnvios.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
